{"ast":null,"code":"var _jsxFileName = \"/Users/lifetech/training-intern-032022/react-firestore/nguyenlehai/src/components/Comment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebaseConfig\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Comment(_ref) {\n  _s();\n\n  let {\n    idPost\n  } = _ref;\n  const [comments, setComments] = useState('');\n  const [comment, setComment] = useState([]); // console.log(\"Check id item\", idPost);\n\n  const handleComment = () => {\n    db.collection(\"comment\").doc(`${idPost}`).collection(\"postComment\").add({\n      comment: comments\n    });\n  };\n\n  useEffect(() => {\n    try {\n      return db.collection(`comment/${idPost}/postComment`).get().then(snap => {\n        let array = [];\n        snap.forEach(doc => {\n          array.push({\n            id: doc.id,\n            comment: doc.data().comment\n          });\n        });\n        setComment(array);\n        console.log(array);\n      });\n    } catch (error) {\n      toast(error.code, {\n        type: \"error\"\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", comment.comment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: comments,\n      onChange: e => {\n        setComments(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleComment(),\n      children: \"Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Comment, \"3HyH1CcTrn8b6iE0hzr4/rECEFY=\");\n\n_c = Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/Users/lifetech/training-intern-032022/react-firestore/nguyenlehai/src/components/Comment.jsx"],"names":["React","useEffect","useState","db","toast","Comment","idPost","comments","setComments","comment","setComment","handleComment","collection","doc","add","get","then","snap","array","forEach","push","id","data","console","log","error","code","type","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,EAAR,QAAiB,mBAAjB;AACA,SAAQC,KAAR,QAAoB,gBAApB;;AAEA,eAAe,SAASC,OAAT,OAA2B;AAAA;;AAAA,MAAV;AAACC,IAAAA;AAAD,GAAU;AACtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC,CAFsC,CAGtC;;AAEA,QAAMS,aAAa,GAAG,MAAM;AACxBR,IAAAA,EAAE,CAACS,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA8B,GAAEP,MAAO,EAAvC,EAA0CM,UAA1C,CAAqD,aAArD,EAAoEE,GAApE,CAAwE;AACpEL,MAAAA,OAAO,EAAEF;AAD2D,KAAxE;AAGH,GAJD;;AAMAN,EAAAA,SAAS,CAAC,MAAI;AACV,QAAI;AACA,aAAOE,EAAE,CAACS,UAAH,CAAe,WAAUN,MAAO,cAAhC,EACFS,GADE,GACIC,IADJ,CACUC,IAAD,IAAU;AACtB,YAAIC,KAAK,GAAG,EAAZ;AACAD,QAAAA,IAAI,CAACE,OAAL,CAAcN,GAAD,IAAQ;AACjBK,UAAAA,KAAK,CAACE,IAAN,CAAW;AACHC,YAAAA,EAAE,EAAER,GAAG,CAACQ,EADL;AAEHZ,YAAAA,OAAO,EAAEI,GAAG,CAACS,IAAJ,GAAWb;AAFjB,WAAX;AAKH,SAND;AAOAC,QAAAA,UAAU,CAACQ,KAAD,CAAV;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACH,OAZM,CAAP;AAaH,KAdD,CAcE,OAAOO,KAAP,EAAc;AACZrB,MAAAA,KAAK,CAACqB,KAAK,CAACC,IAAP,EAAa;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAb,CAAL;AACH;AACJ,GAlBQ,CAAT;AAwBA,sBACI;AAAA,4BAEI;AAAA,6BACI;AAAA,wBAAMlB,OAAO,CAACA,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,OAASA,OAAO,CAACY,EAAjB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAEd,QAFX;AAGI,MAAA,QAAQ,EAAGqB,CAAD,IAAO;AACbpB,QAAAA,WAAW,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH;AALL;AAAA;AAAA;AAAA;AAAA,YALJ,eAYI;AACI,MAAA,OAAO,EAAE,MAAMnB,aAAa,EADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GAxDuBN,O;;KAAAA,O","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {db} from \"../firebaseConfig\";\nimport {toast} from \"react-toastify\";\n\nexport default function Comment({idPost}) {\n    const [comments, setComments] = useState('')\n    const [comment, setComment] = useState([]);\n    // console.log(\"Check id item\", idPost);\n\n    const handleComment = () => {\n        db.collection(\"comment\").doc(`${idPost}`).collection(\"postComment\").add({\n            comment: comments\n        })\n    }\n\n    useEffect(()=>{\n        try {\n            return db.collection(`comment/${idPost}/postComment`)\n                .get().then((snap) => {\n                let array = []\n                snap.forEach((doc)=> {\n                    array.push({\n                            id: doc.id,\n                            comment: doc.data().comment\n                        }\n                    );\n                })\n                setComment(array);\n                console.log(array)\n            })\n        } catch (error) {\n            toast(error.code, { type: \"error\" });\n        }\n    })\n\n\n\n\n\n    return (\n        <div>\n            {/*tách comment ra khỏi bài Post*/}\n            <ul key={comment.id}>\n                <li> {comment.comment}</li>\n            </ul>\n            <input\n                type=\"text\"\n                value={comments}\n                onChange={(e) => {\n                    setComments(e.target.value);\n                }}\n            ></input>\n            <button\n                onClick={() => handleComment()}\n            >\n                Comment\n            </button>\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}