{"ast":null,"code":"var _jsxFileName = \"/Users/lifetech/training-intern-032022/react-firestore/nguyenlehai/src/components/Comment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebaseConfig\";\nimport { toast } from \"react-toastify\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Comment(_ref) {\n  _s();\n\n  let {\n    idPost,\n    user\n  } = _ref;\n  const [comments, setComments] = useState('');\n  const [comment, setComment] = useState([]);\n\n  const handleComment = () => {\n    db.collection(\"comment\").doc(`${idPost}`).collection(\"postComment\").add({\n      userRef: db.doc(`users/${user}`),\n      comment: comments\n    });\n  };\n\n  useEffect(() => {\n    const Declare = db.collection(`comment/${idPost}/postComment`);\n    const virtualization = onSnapshot(Declare, async snap => {\n      let array = [];\n      snap.forEach(doc => {\n        array.push({\n          id: doc.id,\n          comment: doc.data().comment\n        });\n      });\n      const arrPosts = await Promise.all(array.map(async post => {\n        const uPost = { ...post,\n          name: (await db.doc(`users/${post.uid}`).get()).data().name\n        };\n        return uPost;\n      }));\n      setComment(arrPosts); // console.log(arrPosts)\n    });\n    return virtualization();\n  }, [idPost]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comment.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [comment.name, \" :\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), comment.comment]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), user && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: comments,\n        onChange: e => {\n          setComments(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleComment(),\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Comment, \"3HyH1CcTrn8b6iE0hzr4/rECEFY=\");\n\n_c = Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/Users/lifetech/training-intern-032022/react-firestore/nguyenlehai/src/components/Comment.jsx"],"names":["React","useEffect","useState","db","toast","onSnapshot","Comment","idPost","user","comments","setComments","comment","setComment","handleComment","collection","doc","add","userRef","Declare","virtualization","snap","array","forEach","push","id","data","arrPosts","Promise","all","map","post","uPost","name","uid","get","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,EAAR,QAAiB,mBAAjB;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAAQC,UAAR,QAAyB,oBAAzB;;;AAEA,eAAe,SAASC,OAAT,OAAiC;AAAA;;AAAA,MAAhB;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAgB;AAC5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMW,aAAa,GAAG,MAAM;AACxBV,IAAAA,EAAE,CAACW,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA8B,GAAER,MAAO,EAAvC,EAA0CO,UAA1C,CAAqD,aAArD,EAAoEE,GAApE,CAAwE;AACpEC,MAAAA,OAAO,EAAEd,EAAE,CAACY,GAAH,CAAQ,SAAQP,IAAK,EAArB,CAD2D;AAEpEG,MAAAA,OAAO,EAAEF;AAF2D,KAAxE;AAIH,GALD;;AAMAR,EAAAA,SAAS,CAAE,MAAM;AAEX,UAAMiB,OAAO,GAAGf,EAAE,CAACW,UAAH,CAAe,WAAUP,MAAO,cAAhC,CAAhB;AACM,UAAMY,cAAc,GAAId,UAAU,CAACa,OAAD,EAAU,MAAOE,IAAP,IAAgB;AACxD,UAAIC,KAAK,GAAG,EAAZ;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAeP,GAAD,IAAS;AACnBM,QAAAA,KAAK,CAACE,IAAN,CAAW;AACPC,UAAAA,EAAE,EAAET,GAAG,CAACS,EADD;AAEPb,UAAAA,OAAO,EAAEI,GAAG,CAACU,IAAJ,GAAWd;AAFb,SAAX;AAGK,OAJT;AAKA,YAAMe,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CACnBP,KAAK,CAACQ,GAAN,CAAU,MAAOC,IAAP,IAAgB;AACtB,cAAMC,KAAK,GAAG,EACV,GAAGD,IADO;AAEVE,UAAAA,IAAI,EAAE,CAAC,MAAM7B,EAAE,CAACY,GAAH,CAAQ,SAAQe,IAAI,CAACG,GAAI,EAAzB,EAA4BC,GAA5B,EAAP,EAA0CT,IAA1C,GAAiDO;AAF7C,SAAd;AAIA,eAAOD,KAAP;AACH,OAND,CADmB,CAAvB;AASAnB,MAAAA,UAAU,CAACc,QAAD,CAAV,CAhBwD,CAiBxD;AACH,KAlBiC,CAAlC;AAoBhB,WAAOP,cAAc,EAArB;AACK,GAxBQ,EAwBN,CAACZ,MAAD,CAxBM,CAAT;AA0BA,sBACI;AAAA,4BACI;AAAA,gBACKI,OAAO,CAACkB,GAAR,CAAalB,OAAD,iBACT;AAAA,gCACI;AAAA,qBAAKA,OAAO,CAACqB,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKrB,OAAO,CAACA,OAFb;AAAA,SAASA,OAAO,CAACa,EAAjB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,EASKhB,IAAI,iBACD;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAEC,QAFX;AAGI,QAAA,QAAQ,EAAG0B,CAAD,IAAO;AACbzB,UAAAA,WAAW,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH;AALL;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AACI,QAAA,OAAO,EAAE,MACLxB,aAAa,EAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA,oBAVR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH;;GAhEuBP,O;;KAAAA,O","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {db} from \"../firebaseConfig\";\nimport {toast} from \"react-toastify\";\nimport {onSnapshot} from \"firebase/firestore\";\n\nexport default function Comment({idPost, user}) {\n    const [comments, setComments] = useState('')\n    const [comment, setComment] = useState([]);\n\n    const handleComment = () => {\n        db.collection(\"comment\").doc(`${idPost}`).collection(\"postComment\").add({\n            userRef: db.doc(`users/${user}`),\n            comment: comments\n        })\n    }\n    useEffect( () => {\n\n          const Declare = db.collection(`comment/${idPost}/postComment`)\n                const virtualization =  onSnapshot(Declare, async (snap) => {\n                    let array = []\n                    snap.forEach( (doc) => {\n                        array.push({\n                            id: doc.id,\n                            comment: doc.data().comment,\n                        }); })\n                    const arrPosts = await Promise.all(\n                        array.map(async (post) => {\n                            const uPost = {\n                                ...post,\n                                name: (await db.doc(`users/${post.uid}`).get()).data().name\n                            }\n                            return uPost\n                        }))\n\n                    setComment(arrPosts);\n                    // console.log(arrPosts)\n                })\n\nreturn virtualization()\n    }, [idPost])\n\n    return (\n        <div>\n            <ul>\n                {comment.map((comment) => (\n                    <li key={comment.id}>\n                        <h1>{comment.name} :</h1>\n                        {comment.comment}\n                    </li>\n                ))}\n            </ul>\n            {user && (\n                <>\n                    <input\n                        type=\"text\"\n                        value={comments}\n                        onChange={(e) => {\n                            setComments(e.target.value);\n                        }}>\n                    </input>\n                    <button\n                        onClick={() =>\n                            handleComment()}>\n                        Comment\n                    </button>\n                </>\n            )}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}