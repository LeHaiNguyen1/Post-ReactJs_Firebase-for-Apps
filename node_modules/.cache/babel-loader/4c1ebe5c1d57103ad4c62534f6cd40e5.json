{"ast":null,"code":"var _jsxFileName = \"/Users/lifetech/training-intern-032022/react-firestore/nguyenlehai/src/components/Comment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebaseConfig\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Comment(_ref) {\n  _s();\n\n  let {\n    idPost,\n    user\n  } = _ref;\n  const [comments, setComments] = useState('');\n  const [comment, setComment] = useState([]);\n\n  const handleComment = () => {\n    db.collection(\"comment\").doc(`${idPost}`).collection(\"postComment\").add({\n      userRef: db.doc(`users/${user}`),\n      comment: comments\n    });\n  };\n\n  useEffect(() => {\n    const Declare = db.collection(`comment/${idPost}/postComment`);\n    const virtualization = onSnapshot(Declare, async snap => {\n      let array = [];\n      snap.forEach(doc => {\n        array.push({\n          id: doc.id,\n          comment: doc.data().comment,\n          userRef: doc.data().userRef\n        });\n      });\n      const arrPosts = await Promise.all(array.map(async post => {\n        const cPost = { ...post,\n          userRef: (await db.doc(post.userRef.path).get()).data().name\n        };\n        return cPost;\n      }));\n      setComment(arrPosts);\n      console.log(arrPosts);\n    });\n    return virtualization;\n  }, [idPost]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comment.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-form\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              height: \"32\",\n              \"aria-hidden\": \"true\",\n              viewBox: \"0 0 16 16\",\n              version: \"1.1\",\n              width: \"32\",\n              \"data-view-component\": \"true\",\n              className: \"octicon octicon-mark-github v-align-middle\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                \"fill-rule\": \"evenodd\",\n                d: \"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Post Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"my-comments\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comments__spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n              // src=\"/comments?permalink=https%3A%2F%2Fvietlaravel.com%2Fhuong-dan-tao-comment-trong-bai-viet-cho-laravel.html&amp;page_id=63\"\n              className: \"comments__iframe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: comment.userRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), \": \", comment.comment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), user && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: comments,\n        onChange: e => {\n          setComments(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleComment(),\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Comment, \"3HyH1CcTrn8b6iE0hzr4/rECEFY=\");\n\n_c = Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/Users/lifetech/training-intern-032022/react-firestore/nguyenlehai/src/components/Comment.jsx"],"names":["React","useEffect","useState","db","onSnapshot","Comment","idPost","user","comments","setComments","comment","setComment","handleComment","collection","doc","add","userRef","Declare","virtualization","snap","array","forEach","push","id","data","arrPosts","Promise","all","map","post","cPost","path","get","name","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {db} from \"../firebaseConfig\";\nimport {onSnapshot} from \"firebase/firestore\";\n\nexport default function Comment({idPost, user}) {\n    const [comments, setComments] = useState('')\n    const [comment, setComment] = useState([]);\n\n    const handleComment = () => {\n        db.collection(\"comment\").doc(`${idPost}`).collection(\"postComment\").add({\n            userRef: db.doc(`users/${user}`),\n            comment: comments\n        })\n    }\n    useEffect( () => {\n\n          const Declare = db.collection(`comment/${idPost}/postComment`)\n                const virtualization =  onSnapshot(Declare, async (snap) => {\n                    let array = []\n                    snap.forEach( (doc) => {\n                        array.push({\n                            id: doc.id,\n                            comment: doc.data().comment,\n                            userRef: doc.data().userRef\n                        }); })\n\n                    const arrPosts = await Promise.all(\n                        array.map(async (post) => {\n                            const cPost ={\n                                ...post,\n                                userRef: (await db.doc(post.userRef.path).get()).data().name\n                            }\n                            return cPost\n                        }))\n                    setComment(arrPosts)\n                    console.log(arrPosts)\n                })\nreturn virtualization\n    }, [idPost])\n\n    return (\n        <div>\n            <ul>\n                {comment.map((comment) => (\n                    <li key={comment.id}>\n                        <div>\n\n\n                        <div className=\"comment-form\">\n                            <svg height=\"32\" aria-hidden=\"true\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"32\"\n                                 data-view-component=\"true\" className=\"octicon octicon-mark-github v-align-middle\">\n                                <path fill-rule=\"evenodd\"\n                                      d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path>\n                            </svg>\n                        </div>\n                            <h4>Post Comment</h4>\n                            <div id=\"my-comments\">\n                                <div className=\"comments__spinner\" ></div>\n                                <iframe\n                                        // src=\"/comments?permalink=https%3A%2F%2Fvietlaravel.com%2Fhuong-dan-tao-comment-trong-bai-viet-cho-laravel.html&amp;page_id=63\"\n                                        className=\"comments__iframe\"\n                                       ></iframe>\n                            </div>\n                            <b>{comment.userRef}</b>\n                            : {comment.comment}\n                        </div>\n\n\n\n                    </li>\n                ))}\n            </ul>\n            {user && (\n                <>\n                    <input\n                        type=\"text\"\n                        value={comments}\n                        onChange={(e) => {\n                            setComments(e.target.value);\n                        }}>\n                    </input>\n                    <button\n                        onClick={() =>\n                            handleComment()}>\n                        Comment\n                    </button>\n                </>\n            )}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}