{"ast":null,"code":"var _jsxFileName = \"/Users/lifetech/training-intern-032022/react-firestore/nguyenlehai/src/components/Comment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../firebaseConfig\";\nimport { toast } from \"react-toastify\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Comment(_ref) {\n  _s();\n\n  let {\n    idPost,\n    user\n  } = _ref;\n  const [comments, setComments] = useState('');\n  const [comment, setComment] = useState([]); // console.log(\"Check id item\", idPost);\n\n  const handleComment = () => {\n    db.collection(\"comment\").doc(`${idPost}`).collection(\"postComment\").add({\n      comment: comments\n    });\n  };\n\n  useEffect(() => {\n    try {\n      return db.collection(`comment/${idPost}/postComment`).onSnapshot(snap => {\n        let array = [];\n        snap.forEach(doc => {\n          array.push({\n            id: doc.id,\n            comment: doc.data().comment\n          });\n        });\n        setComment(array);\n        console.log(array);\n      });\n    } catch (error) {\n      toast(error.code, {\n        type: \"error\"\n      });\n    }\n  }, [idPost]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comment.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: comment.comment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), user && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: comments,\n        onChange: e => {\n          setComments(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleComment(),\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Comment, \"3HyH1CcTrn8b6iE0hzr4/rECEFY=\");\n\n_c = Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/Users/lifetech/training-intern-032022/react-firestore/nguyenlehai/src/components/Comment.jsx"],"names":["React","useEffect","useState","db","toast","onSnapshot","Comment","idPost","user","comments","setComments","comment","setComment","handleComment","collection","doc","add","snap","array","forEach","push","id","data","console","log","error","code","type","map","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,EAAR,QAAiB,mBAAjB;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAAQC,UAAR,QAAyB,oBAAzB;;;AAEA,eAAe,SAASC,OAAT,OAAkC;AAAA;;AAAA,MAAjB;AAACC,IAAAA,MAAD;AAAUC,IAAAA;AAAV,GAAiB;AAC7C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC,CAF6C,CAG7C;;AAEA,QAAMW,aAAa,GAAG,MAAM;AACxBV,IAAAA,EAAE,CAACW,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA8B,GAAER,MAAO,EAAvC,EAA0CO,UAA1C,CAAqD,aAArD,EAAoEE,GAApE,CAAwE;AACpEL,MAAAA,OAAO,EAAEF;AAD2D,KAAxE;AAGH,GAJD;;AAMAR,EAAAA,SAAS,CAAC,MAAI;AACV,QAAI;AACA,aAAOE,EAAE,CAACW,UAAH,CAAe,WAAUP,MAAO,cAAhC,EACFF,UADE,CACUY,IAAD,IAAU;AACtB,YAAIC,KAAK,GAAG,EAAZ;AACAD,QAAAA,IAAI,CAACE,OAAL,CAAcJ,GAAD,IAAQ;AACjBG,UAAAA,KAAK,CAACE,IAAN,CAAW;AACHC,YAAAA,EAAE,EAAEN,GAAG,CAACM,EADL;AAEHV,YAAAA,OAAO,EAAEI,GAAG,CAACO,IAAJ,GAAWX;AAFjB,WAAX;AAKH,SAND;AAOAC,QAAAA,UAAU,CAACM,KAAD,CAAV;AACJK,QAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACC,OAZM,CAAP;AAaH,KAdD,CAcE,OAAOO,KAAP,EAAc;AACZrB,MAAAA,KAAK,CAACqB,KAAK,CAACC,IAAP,EAAa;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAb,CAAL;AACH;AACJ,GAlBQ,EAkBP,CAACpB,MAAD,CAlBO,CAAT;AAwBA,sBACI;AAAA,4BAGI;AAAA,gBACKI,OAAO,CAACiB,GAAR,CAAajB,OAAD,iBACT;AAAA,kBACKA,OAAO,CAACA;AADb,SAASA,OAAO,CAACU,EAAjB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ,EAYKb,IAAI,iBAAK;AAAA,8BACV;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAEC,QAFX;AAGI,QAAA,QAAQ,EAAGoB,CAAD,IAAO;AACbnB,UAAAA,WAAW,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH;AALL;AAAA;AAAA;AAAA;AAAA,cADU,eAQV;AACI,QAAA,OAAO,EAAE,MAAMlB,aAAa,EADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARU;AAAA,oBAZd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GAhEuBP,O;;KAAAA,O","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {db} from \"../firebaseConfig\";\nimport {toast} from \"react-toastify\";\nimport {onSnapshot} from \"firebase/firestore\";\n\nexport default function Comment({idPost , user}) {\n    const [comments, setComments] = useState('')\n    const [comment, setComment] = useState([]);\n    // console.log(\"Check id item\", idPost);\n\n    const handleComment = () => {\n        db.collection(\"comment\").doc(`${idPost}`).collection(\"postComment\").add({\n            comment: comments\n        })\n    }\n\n    useEffect(()=>{\n        try {\n            return db.collection(`comment/${idPost}/postComment`)\n                .onSnapshot((snap) => {\n                let array = []\n                snap.forEach((doc)=> {\n                    array.push({\n                            id: doc.id,\n                            comment: doc.data().comment\n                        }\n                    );\n                })\n                setComment(array);\n            console.log(array)\n            })\n        } catch (error) {\n            toast(error.code, { type: \"error\" });\n        }\n    },[idPost])\n\n\n\n\n\n    return (\n        <div>\n            {/*tách comment ra khỏi bài Post*/}\n\n            <ul>\n                {comment.map((comment) => (\n                    <li key={comment.id}>\n                        {comment.comment}\n                    </li>\n                    )\n                )}\n\n            </ul>\n            {user && (<>\n            <input\n                type=\"text\"\n                value={comments}\n                onChange={(e) => {\n                    setComments(e.target.value);\n                }}\n            ></input>\n            <button\n                onClick={() => handleComment()}\n            >\n                Comment\n            </button></>)\n            }\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}